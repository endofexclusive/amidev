#ifndef CUSTOM_H_
#define CUSTOM_H_

#include "types.h"

struct custom {
        UWORD   bltddat ;
        UWORD   dmaconr ;
        UWORD   vposr   ;
        UWORD   vhposr  ;
        UWORD   dskdatr ;
        UWORD   joy0dat ;
        UWORD   joy1dat ;
        UWORD   clxdat  ;
        UWORD   adkconr ;
        UWORD   pot0dat ;
        UWORD   pot1dat ;
        UWORD   potgor  ;
        UWORD   serdatr ;
        UWORD   dskbytr ;
        UWORD   intenar ;
        UWORD   intreqr ;
        void   *dskpth  ;
        UWORD   dsklen  ;
        UWORD   dskdat  ;
        UWORD   refptr  ;
        UWORD   vposw   ;
        UWORD   vhposw  ;
        UWORD   copcon  ;
        UWORD   serdat  ;
        UWORD   serper  ;
        UWORD   potgo   ;
        UWORD   joytest ;
        UWORD   strequ  ;
        UWORD   strvbl  ;
        UWORD   strhor  ;
        UWORD   strlong ;
        UWORD   bltcon0 ;
        UWORD   bltcon1 ;
        UWORD   bltafwm ;
        UWORD   bltalwm ;
        void   *bltcpth ;
        void   *bltbpth ;
        void   *bltapth ;
        void   *bltdpth ;
        UWORD   bltsize ;
        UWORD   bltcon0l;
        UWORD   bltsizv ;
        UWORD   bltsizh ;
        UWORD   bltcmod ;
        UWORD   bltbmod ;
        UWORD   bltamod ;
        UWORD   bltdmod ;
        UWORD   _pad068 ;
        UWORD   _pad06a ;
        UWORD   _pad06c ;
        UWORD   _pad06e ;
        UWORD   bltcdat ;
        UWORD   bltbdat ;
        UWORD   bltadat ;
        UWORD   _pad076 ;
        UWORD   sprhdat ;
        UWORD   _pad07a ;
        UWORD   deniseid;
        UWORD   dsksync ;
        void   *cop1lch ;
        void   *cop2lch ;
        UWORD   copjmp1 ;
        UWORD   copjmp2 ;
        UWORD   copins  ;
        UWORD   diwstrt ;
        UWORD   diwstop ;
        UWORD   ddfstrt ;
        UWORD   ddfstop ;
        UWORD   dmacon  ;
        UWORD   clxcon  ;
        UWORD   intena  ;
        UWORD   intreq  ;
        UWORD   adkcon  ;
        void   *aud0lch ;
        UWORD   aud0len ;
        UWORD   aud0per ;
        UWORD   aud0vol ;
        UWORD   aud0dat ;
        UWORD   _pad0ac ;
        UWORD   _pad0ae ;
        void   *aud1lch ;
        UWORD   aud1len ;
        UWORD   aud1per ;
        UWORD   aud1vol ;
        UWORD   aud1dat ;
        UWORD   _pad0bc ;
        UWORD   _pad0be ;
        void   *aud2lch ;
        UWORD   aud2len ;
        UWORD   aud2per ;
        UWORD   aud2vol ;
        UWORD   aud2dat ;
        UWORD   _pad0cc ;
        UWORD   _pad0ce ;
        void   *aud3lch ;
        UWORD   aud3len ;
        UWORD   aud3per ;
        UWORD   aud3vol ;
        UWORD   aud3dat ;
        UWORD   _pad0dc ;
        UWORD   _pad0de ;
        void   *bpl1pth ;
        void   *bpl2pth ;
        void   *bpl3pth ;
        void   *bpl4pth ;
        void   *bpl5pth ;
        void   *bpl6pth ;
        UWORD   _pad0f8 ;
        UWORD   _pad0fa ;
        UWORD   _pad0fc ;
        UWORD   _pad0fe ;
        UWORD   bplcon0 ;
        UWORD   bplcon1 ;
        UWORD   bplcon2 ;
        UWORD   bplcon3 ;
        UWORD   bpl1mod ;
        UWORD   bpl2mod ;
        UWORD   _pad10c ;
        UWORD   _pad10e ;
        UWORD   bpl1dat ;
        UWORD   bpl2dat ;
        UWORD   bpl3dat ;
        UWORD   bpl4dat ;
        UWORD   bpl5dat ;
        UWORD   bpl6dat ;
        UWORD   _pad11c ;
        UWORD   _pad11e ;
        void   *spr0pth ;
        void   *spr1pth ;
        void   *spr2pth ;
        void   *spr3pth ;
        void   *spr4pth ;
        void   *spr5pth ;
        void   *spr6pth ;
        void   *spr7pth ;
        UWORD   spr0pos ;
        UWORD   spr0ctl ;
        UWORD   spr0data;
        UWORD   spr0datb;
        UWORD   spr1pos ;
        UWORD   spr1ctl ;
        UWORD   spr1data;
        UWORD   spr1datb;
        UWORD   spr2pos ;
        UWORD   spr2ctl ;
        UWORD   spr2data;
        UWORD   spr2datb;
        UWORD   spr3pos ;
        UWORD   spr3ctl ;
        UWORD   spr3data;
        UWORD   spr3datb;
        UWORD   spr4pos ;
        UWORD   spr4ctl ;
        UWORD   spr4data;
        UWORD   spr4datb;
        UWORD   spr5pos ;
        UWORD   spr5ctl ;
        UWORD   spr5data;
        UWORD   spr5datb;
        UWORD   spr6pos ;
        UWORD   spr6ctl ;
        UWORD   spr6data;
        UWORD   spr6datb;
        UWORD   spr7pos ;
        UWORD   spr7ctl ;
        UWORD   spr7data;
        UWORD   spr7datb;
        UWORD   color00 ;
        UWORD   color01 ;
        UWORD   color02 ;
        UWORD   color03 ;
        UWORD   color04 ;
        UWORD   color05 ;
        UWORD   color06 ;
        UWORD   color07 ;
        UWORD   color08 ;
        UWORD   color09 ;
        UWORD   color10 ;
        UWORD   color11 ;
        UWORD   color12 ;
        UWORD   color13 ;
        UWORD   color14 ;
        UWORD   color15 ;
        UWORD   color16 ;
        UWORD   color17 ;
        UWORD   color18 ;
        UWORD   color19 ;
        UWORD   color20 ;
        UWORD   color21 ;
        UWORD   color22 ;
        UWORD   color23 ;
        UWORD   color24 ;
        UWORD   color25 ;
        UWORD   color26 ;
        UWORD   color27 ;
        UWORD   color28 ;
        UWORD   color29 ;
        UWORD   color30 ;
        UWORD   color31 ;
        UWORD   htotal  ;
        UWORD   hsstop  ;
        UWORD   hbstrt  ;
        UWORD   hbstop  ;
        UWORD   vtotal  ;
        UWORD   vsstop  ;
        UWORD   vbstrt  ;
        UWORD   vbstop  ;
        UWORD   _pad1d0 ;
        UWORD   _pad1d2 ;
        UWORD   _pad1d4 ;
        UWORD   _pad1d6 ;
        UWORD   _pad1d8 ;
        UWORD   _pad1da ;
        UWORD   beamcon0;
        UWORD   hsstrt  ;
        UWORD   vsstrt  ;
        UWORD   hcenter ;
        UWORD   diwhigh ;
};

#define CUSTOMBASE 0xdff000

/*
 * Global register variable is a GCC extension which associates a variable with
 * a specific register. For this to work, the definition MUST be available to
 * ALL compilation units, since otherwise the register may be clobbered. See
 * the GCC manual for more information.
 */
#if CUSTOM_AS_GLOBAL_REG
register volatile struct custom *const custom asm ("a5");
#else
static volatile struct custom *const custom = (void *) CUSTOMBASE;
#endif

#endif

